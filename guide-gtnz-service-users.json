{"sections":[{"html":"<table class=\"table-wrapper\">\n    <tr>\n        <td>Description</td>\n        <td>Learn the basics about ZITADEL Service Users, how to set them up and authorize with ZITADEL.</td>\n    </tr>\n    <tr>\n        <td>Learning Outcomes</td>\n        <td>\n            In this module you will: \n            <ul>\n                <li>Learn about Service Users</li>\n                <li>Create a Service User in ZITADEL Console</li>\n                <li>Authorize a Service User with JWT signed with your private key</li>\n            </ul>\n        </td>\n    </tr>\n     <tr>\n        <td>Prerequisites</td>\n        <td>\n            <ul>\n                <li>Knowledge of <a href=\"/oauth-recommended-flows#Our_recommended_authorization_flows\">Recommended Authorization Flows</a></li>\n            </ul>\n        </td>\n    </tr>\n</table>\n\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Human_vs_Machine\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Human_vs_Machine\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tHuman vs. Machine\n\t\t\t\t\t</h3><p>ZITADEL supports human an machine users. We call human users simply &quot;Users&quot; and machine users &quot;Service Users&quot;.</p>\n<p>With Service Users you would typically secure backend services. For example in ZITADEL you would require an authenticated Service User to access the Management API. The main difference between human and machine users is the type of credentials that can be used for authentication: Human users typically logon via an login prompt, but Machine users require a non-interactive logon process.</p>\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Exercise_Create_a_Service_User\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Exercise_Create_a_Service_User\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tExercise: Create a Service User\n\t\t\t\t\t</h3><ol>\n<li>Navigate to Service Users</li>\n<li>Click on <strong>New</strong></li>\n<li>Enter a user name and a display name</li>\n</ol>\n<figure itemprop=\"associatedMedia\" itemscope itemtype=\"http://schema.org/ImageObject\">\n    <a href=\"img/console_serviceusers_create.gif\" itemprop=\"contentUrl\" data-size=\"1920x1080\">\n        <img src=\"img/console_serviceusers_create.gif\" itemprop=\"thumbnail\" alt=\"console_serviceusers_create\" />\n    </a>\n    <figcaption itemprop=\"caption description\">Create new service user</figcaption>\n</figure>\n\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Authenticating_a_service_user\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Authenticating_a_service_user\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tAuthenticating a service user\n\t\t\t\t\t</h3><p>In ZITADEL we use the <code>private_jwt</code> (<strong>“JWT bearer token with private key”</strong>, <a href=\"https://tools.ietf.org/html/rfc7523\" target=\"_blank\">RFC7523</a>) authorization grant for this non-interactive authentication.</p>\n<p>You need to follow these steps to authenticate a service user and receive a access token:</p>\n<ol>\n<li>Generate a private-public key pair in ZITADEL </li>\n<li>Create a JSON Web Token (JWT) and sign with private key</li>\n<li>With this JWT, request an OAuth token from ZITADEL</li>\n</ol>\n<p>With this token you can make subsequent requests, just like a human user.</p>\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Exercise_Get_an_access_token\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Exercise_Get_an_access_token\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tExercise: Get an access token\n\t\t\t\t\t</h3><p>In this exercise we will authenticate a service user and receive an access_token to </p>\n<blockquote>\n<p><strong>Information:</strong> Are you stuck? Don&#39;t hesitate to reach out to us on <a href=\"https://github.com/caos/zitadel/discussions\" target=\"_blank\">Github Discussions</a> or <a href=\"https://zitadel.ch/contact/\" target=\"_blank\">contact us</a> privately.</p>\n</blockquote>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"1_Generate_a_private-public_key_pair_in_ZITADEL\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#1_Generate_a_private-public_key_pair_in_ZITADEL\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\t1. Generate a private-public key pair in ZITADEL\n\t\t\t\t\t</h4><p>Select your service user and in the section KEYS click <strong>New</strong>. Enter an expiration date and click <strong>Add</strong>. Make sure to download the json by clicking <strong>Download</strong>. </p>\n<figure itemprop=\"associatedMedia\" itemscope itemtype=\"http://schema.org/ImageObject\">\n    <a href=\"img/console_serviceusers_new_key.gif\" itemprop=\"contentUrl\" data-size=\"1920x1080\">\n        <img src=\"img/console_serviceusers_new_key.gif\" itemprop=\"thumbnail\" alt=\"console_serviceusers_new_key\" />\n    </a>\n    <figcaption itemprop=\"caption description\">Create private key</figcaption>\n</figure>\n\n<p>The downloaded json should look something like outlined below. The value of <code>key</code> contains the <em>private</em> key for your service account. Please make sure to keep this key securely stored and handle with care. The public key is automatically stored in ZITADEL.</p>\n<div class=''><pre class='language-undefined'><code>{\n\t<span class=\"hljs-attr\">&quot;type&quot;</span>:<span class=\"hljs-string\">&quot;serviceaccount&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;keyId&quot;</span>:<span class=\"hljs-string\">&quot;100509901696068329&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;key&quot;</span>:<span class=\"hljs-string\">&quot;-----BEGIN RSA PRIVATE KEY----- [...] -----END RSA PRIVATE KEY-----\\n&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;userId&quot;</span>:<span class=\"hljs-string\">&quot;100507859606888466&quot;</span>\n}</code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"2_Create_a_JWT_and_sign_with_private_key\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#2_Create_a_JWT_and_sign_with_private_key\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\t2. Create a JWT and sign with private key\n\t\t\t\t\t</h4><p>You need to create a JWT with the following header and payload and sign it with the RS256 algorithm.</p>\n<p>Header</p>\n<div class=''><pre class='language-undefined'><code>{\n\t<span class=\"hljs-attr\">&quot;alg&quot;</span>: <span class=\"hljs-string\">&quot;RS256&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;kid&quot;</span>:<span class=\"hljs-string\">&quot;100509901696068329&quot;</span>\n}</code></pre></div><p>Make sure to include <code>kid</code> in the header with the value of <code>keyId</code> from the downloaded JSON.</p>\n<p>Payload</p>\n<div class=''><pre class='language-undefined'><code>{\n\t<span class=\"hljs-attr\">&quot;iss&quot;</span>: <span class=\"hljs-string\">&quot;100507859606888466&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;sub&quot;</span>: <span class=\"hljs-string\">&quot;100507859606888466&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;aud&quot;</span>: <span class=\"hljs-string\">&quot;https://issuer.zitadel.ch&quot;</span>,\n\t<span class=\"hljs-attr\">&quot;iat&quot;</span>: [Current UTC timestamp, e.g. <span class=\"hljs-number\">1605179982</span>],\n\t<span class=\"hljs-attr\">&quot;exp&quot;</span>: [UTC timestamp, max. <span class=\"hljs-number\">1</span> hour from iat, e.g. <span class=\"hljs-number\">1605183582</span>]\n}</code></pre></div><ul>\n<li><code>iss</code> represents the requesting party, i.e. the owner of the private key. In this case the value of <code>userId</code> from the downloaded JSON.</li>\n<li><code>sub</code> represents the application. Set the value also to the value of <code>userId</code></li>\n<li><code>aud</code> must be ZITADEL&#39;s issuing domain</li>\n<li><code>iat</code> is a unix timestamp of the creation signing time of the JWT, e.g. now</li>\n<li><code>exp</code> is the unix timestamp of expiry of this assertion. Must be less than 1 hour from <code>iat</code></li>\n</ul>\n<p>Please refer to <a href=\"/architecture#JWT_with_Private_Key#JWT_with_Private_Keyvate_Key\">JWT_with_Private_Key</a> in the documentation for further information.</p>\n<blockquote>\n<p><strong>Information:</strong> The <code>exp</code> claim is currently not validated, but will be with a future release. Make sure that <code>exp</code> is less than 1 hour starting from <code>iat</code>.</p>\n</blockquote>\n<p>If you use Go, you might want to use the <a href=\"https://github.com/caos/zitadel-tools\" target=\"_blank\">provided tool</a> to generate a JWT from the downloaded json. There are many <a href=\"https://jwt.io/#libraries-io\" target=\"_blank\">libraries</a> to generate and sign JWT. </p>\n\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"3_With_this_JWT_request_an_OAuth_token_from_ZITADEL\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#3_With_this_JWT_request_an_OAuth_token_from_ZITADEL\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\t3. With this JWT, request an OAuth token from ZITADEL\n\t\t\t\t\t</h4><p>With the encoded JWT from the prior step, you will need to craft a POST request to ZITADEL&#39;s token endpoint:</p>\n<div class=''><pre class='language-bash'><code>curl --request POST \\\n  --url https://api.zitadel.ch/oauth/v2/token \\\n  --header <span class=\"hljs-string\">&#x27;Content-Type: application/x-www-form-urlencoded&#x27;</span> \\\n  --data grant_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer \\\n  --data scope=<span class=\"hljs-string\">&#x27;openid profile email&#x27;</span> \\\n  --data assertion=eyJ0eXAiOiJKV1QiL...</code></pre></div><ul>\n<li><code>grant_type</code> should be set to <code>urn:ietf:params:oauth:client-assertion-type:jwt-bearer</code></li>\n<li><code>scope</code> should contain any <a href=\"/architecture#Scopes\">Scopes</a> you want to include, but must include <code>openid</code>. For this example, please include <code>profile</code> and <code>email</code></li>\n<li><code>assertion</code> is the encoded value of the JWT that was signed with your private key from the prior step</li>\n</ul>\n<p>You should receive a successful response with <code>access_token</code>,  <code>token_type</code> and time to expiry in seconds as <code>expires_in</code>.</p>\n<div class=''><pre class='language-bash'><code>HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  <span class=\"hljs-string\">&quot;access_token&quot;</span>: <span class=\"hljs-string\">&quot;MtjHodGy4zxKylDOhg6kW90WeEQs2q...&quot;</span>,\n  <span class=\"hljs-string\">&quot;token_type&quot;</span>: <span class=\"hljs-string\">&quot;Bearer&quot;</span>,\n  <span class=\"hljs-string\">&quot;expires_in&quot;</span>: 43199\n}</code></pre></div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<span id=\"4_Verify_that_you_have_a_valid_access_toaken\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#4_Verify_that_you_have_a_valid_access_toaken\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\t4. Verify that you have a valid access toaken\n\t\t\t\t\t</h4><p>For this example let&#39;s call the userinfo endpoint to verfiy that our access token works.</p>\n<div class=''><pre class='language-bash'><code>curl --request POST \\\n  --url https://api.zitadel.ch/oauth/v2/userinfo \\\n  --header <span class=\"hljs-string\">&#x27;Content-Type: application/x-www-form-urlencoded&#x27;</span> \\\n  --header <span class=\"hljs-string\">&#x27;Authorization: Bearer MtjHodGy4zxKylDOhg6kW90WeEQs2q...&#x27;</span></code></pre></div><p>You should receive a response with your service user&#39;s information. </p>\n<div class=''><pre class='language-bash'><code>HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  <span class=\"hljs-string\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;MyServiceUser&quot;</span>,\n  <span class=\"hljs-string\">&quot;preferred_username&quot;</span>: <span class=\"hljs-string\">&quot;service_user@acme.zitadel.ch&quot;</span>,\n  <span class=\"hljs-string\">&quot;updated_at&quot;</span>: 1616417938\n}</code></pre></div>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Knowledge_Check\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Knowledge_Check\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tKnowledge Check\n\t\t\t\t\t</h3><ul>\n<li>To secure backend APIs you can request an API key via ZITADEL&#39;s console<ul>\n<li><input disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input disabled=\"\" type=\"checkbox\"> no</li>\n</ul>\n</li>\n<li>The JWT header must contain a property <code>kid</code> with the value of the key ID<ul>\n<li><input disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input disabled=\"\" type=\"checkbox\"> no</li>\n</ul>\n</li>\n<li>After generating a key for your service user, you must download the public key and sign your JWT with the public key<ul>\n<li><input disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input disabled=\"\" type=\"checkbox\"> no</li>\n</ul>\n</li>\n</ul>\n<details>\n    <summary>\n        Solutions\n    </summary>\n\n<ul>\n<li>To secure backend APIs you can request an API key via ZITADEL&#39;s console<ul>\n<li><input disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> no (We use <strong>“JWT bearer token with private key”</strong>, <a href=\"https://tools.ietf.org/html/rfc7523\" target=\"_blank\">RFC7523</a>)</li>\n</ul>\n</li>\n<li>The JWT header must contain a property <code>kid</code> with the value of the key ID<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input disabled=\"\" type=\"checkbox\"> no</li>\n</ul>\n</li>\n<li>After generating a key for your service user, you must download the public key and sign your JWT with the public key<ul>\n<li><input disabled=\"\" type=\"checkbox\"> yes</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> no (The json file contains the private key. Handle with care.)</li>\n</ul>\n</li>\n</ul>\n</details>\n\n\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<span id=\"Summary\" class=\"offset-anchor\" ></span>\n\t\t\t\t\t\t<a href=\"guide-gtnz-service-users#Summary\" class=\"anchor\" aria-hidden=\"true\"><i class=\"las la-link\"></i></a>\n\t\t\t\t\t\tSummary\n\t\t\t\t\t</h3><ul>\n<li>With service users you can secure machine-to-machine communication</li>\n<li>Because there is no interactive logon, you need to use a JWT signed with your private key to authorize the user</li>\n<li>After successful authorization you can use an access token like for human users</li>\n</ul>\n<p>Where to go from here: </p>\n<ul>\n<li>Management API</li>\n<li>Securing backend API</li>\n</ul>\n","metadata":{"title":"ZITADEL Service Users","tags":"beginner, developer, product manager","readingtime":"10min"},"subsections":[{"slug":"Human_vs_Machine","title":"Human vs. Machine","level":3},{"slug":"Exercise_Create_a_Service_User","title":"Exercise: Create a Service User","level":3},{"slug":"Authenticating_a_service_user","title":"Authenticating a service user","level":3},{"slug":"Exercise_Get_an_access_token","title":"Exercise: Get an access token","level":3},{"slug":"1_Generate_a_private-public_key_pair_in_ZITADEL","title":"1. Generate a private-public key pair in ZITADEL","level":4},{"slug":"2_Create_a_JWT_and_sign_with_private_key","title":"2. Create a JWT and sign with private key","level":4},{"slug":"3_With_this_JWT_request_an_OAuth_token_from_ZITADEL","title":"3. With this JWT, request an OAuth token from ZITADEL","level":4},{"slug":"4_Verify_that_you_have_a_valid_access_toaken","title":"4. Verify that you have a valid access toaken","level":4},{"slug":"Knowledge_Check","title":"Knowledge Check","level":3},{"slug":"Summary","title":"Summary","level":3}],"slug":"ZITADEL_Service_Users","file":"00-guide-gtnz-service-users.md"}],"seo":""}