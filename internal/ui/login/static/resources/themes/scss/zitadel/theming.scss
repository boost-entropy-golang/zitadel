@import 'palette';

@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {
    $result: map-merge($base-palette, (
      default: map-get($base-palette, $default),
      lighter: map-get($base-palette, $lighter),
      darker: map-get($base-palette, $darker),
      text: map-get($base-palette, $text),
  
    //   default-contrast: mat-contrast($base-palette, $default),
    //   lighter-contrast: mat-contrast($base-palette, $lighter),
    //   darker-contrast: mat-contrast($base-palette, $darker)
    ));
  
    // For each hue in the palette, add a "-contrast" color to the map.
    // @each $hue, $color in $base-palette {
    //   $result: map-merge($result, (
    //     '#{$hue}-contrast': mat-contrast($base-palette, $hue)
    //   ));
    // }
  
    @return $result;
  }

@function _lgn-create-light-color-config($primary, $accent, $warn: null) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: if($warn != null, $warn, mat-palette($mat-red)),
      is-dark: false,
      foreground: $mat-light-theme-foreground,
      background: $mat-light-theme-background,
    );
}

@function _lgn-create-dark-color-config($primary, $accent, $warn: null) {
    @return (
      primary: $primary,
      accent: $accent,
      warn: if($warn != null, $warn, mat-palette($mat-red)),
      is-dark: true,
      foreground: $mat-dark-theme-foreground,
      background: $mat-dark-theme-background,
    );
  }
  
@function lgn-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {
    @if $accent != null {
      @return lgn-private-create-backwards-compatibility-theme(_mat-validate-theme((
        _is-legacy-theme: true,
        color: _mat-create-light-color-config($primary, $accent, $warn),
      )));
    }

    $result: $primary;
    @if map-get($primary, color) {
      $color-settings: map-get($primary, color);
      $primary: map-get($color-settings, primary);
      $accent: map-get($color-settings, accent);
      $warn: map-get($color-settings, warn);
      $result: map-merge($result, (color: _lgn-create-light-color-config($primary, $accent, $warn)));
    }
    @return lgn-private-create-backwards-compatibility-theme(_mat-validate-theme($result));
  }

@function lgn-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {
    @if $accent != null {
      @return lgn-private-create-backwards-compatibility-theme(_mat-validate-theme((
        _is-legacy-theme: true,
        color: _mat-create-dark-color-config($primary, $accent, $warn),
      )));
    }
  
    $result: $primary;
    @if map-get($primary, color) {
      $color-settings: map-get($primary, color);
      $primary: map-get($color-settings, primary);
      $accent: map-get($color-settings, accent);
      $warn: map-get($color-settings, warn);
      $result: map-merge($result, (color: _lgn-create-dark-color-config($primary, $accent, $warn)));
    }
    @return lgn-private-create-backwards-compatibility-theme(_mat-validate-theme($result));
}

@function lgn-private-create-backwards-compatibility-theme($theme) {
    @if not map-get($theme, color) {
        @return $theme;
    }
    $color: map-get($theme, color);
    @return map-merge($theme, $color);
}